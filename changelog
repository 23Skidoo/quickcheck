QuickCheck (unreleased)

	* Add Discard data type and a Testable instance for discarding test cases.
	* Make Int generator generate only fairly small numbers.
	* Add modifiers Small and Large for controlling the distribution
	  of integers.
	* Define an abstract type QCGen which is used instead of StdGen.
	* Add cabal flag -ftf-random to use the tf-random package for
	  better distribution of random numbers.
	* Add Functor instances for modifiers.
	* Improve shrinking of floating-point numbers.
	* Add number of failed shrink attempts to the result type.

QuickCheck (2.6) 2013-03-07

	* Add convenience Function instances for up to 7-tuples
	* Make stderr line buffered to reduce console I/O.
	* Return a flag to say whether the test case was interrupted.

QuickCheck (2.5) 2012-06-18

	Changes since QuickCheck 2.4.1

	* Replace maxDiscard with maxDiscardRatio
	* Remove Testable () instance.
	* Added a 'discard' exception that discards the current test case
	* Add accessors for modifiers (where it makes sense)
	* Rename 'stop' to 'abort' to avoid a name clash
	* Added a 'once' combinator
	* If a property is of type Bool, only run it once
	* Add coarbitraryEnum to Test.QuickCheck module.
	* Add 'coarbitrary' helper for Enums.
	* Rejiggled the formatting code to support multi-line error messages
	* Add instances for Ordering and Fixed.
	* Added arbitraryBoundedEnum generator (thanks to Antoine Latter).
	* Add verboseCheckAll and polyverboseCheck function for usability.
